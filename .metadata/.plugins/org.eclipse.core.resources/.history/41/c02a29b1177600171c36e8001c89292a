package Testing;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.ArrayList;

public class GitGetter {
	private static ArrayList<String> urlList;
	private static ArrayList<String> nameList;
	private static Process pr;
	private static Runtime rt = Runtime.getRuntime();

	
	public static void main(String[] args) throws IOException, InterruptedException {
		urlList = new ArrayList<String>();
		nameList = new ArrayList<String>();
		doThings();
	}
	
	public static void doThings() throws IOException, InterruptedException {
		File file = new File("src/resources/Test.txt");
		BufferedReader br = new BufferedReader(new FileReader(file));
		String line = br.readLine();
		while(line != null) {
			goGetUrls(line);
			line = br.readLine();
		}
		for(int i = 0; i < urlList.size(); i++) {
			String url = urlList.get(i);
			String name = nameList.get(i);
			addFile(url, name);
			
		}
		System.out.println();
		System.out.println();
		System.out.println();
		System.out.println();
		System.out.println("Finished");
	}


	private static void goGetUrls(String line) {
		String urlName = "\"html_url\": \"http://github.corp.rlws.com/RiceLake-Engineering/";
		if(line.contains(urlName)) {
			line = line.substring(19, line.length()-2);
			System.out.println(line);
			urlList.add(line);
			
			line = line.substring(49);
			//System.out.println(line);
			nameList.add(line);
		}
	}
	
	
	private static void addFile(String url, String name) throws IOException, InterruptedException {
				String[] command = { "cmd", };
				Process p;
				p = Runtime.getRuntime().exec(command);
				new Thread(new SyncPipe(p.getErrorStream(), System.err)).start();
			    new Thread(new SyncPipe(p.getInputStream(), System.out)).start();
			    PrintWriter stdin = new PrintWriter(p.getOutputStream());
			    stdin.println("cd c:\\Users\\marbri\\desktop\\gitTestFolder");
			    stdin.println("git clone " + url);
			    stdin.println("cd " + name);
			    
////////////////////////////////////////////////////////////////////////////////////////
			    stdin.println("xcopy /y c:\\Users\\marbri\\desktop\\.gitattributes");			   
////////////////////////////////////////////////////////////////////////////////////////
			    stdin.println("git add .");
			    stdin.println("git commit -m \"Updated .gitattributes\"");
			    stdin.println("git push");

			    // write any other commands you want here
			    stdin.close();
			    int returnCode = p.waitFor();
			    //System.out.println("Return code = " + returnCode);
			
		    
		

		
		
//		
//		try {
//			pr = rt.exec("cmd /c cd ..");
//			//C:\\Users\\marbri\\desktop\\GitTestFolder");
//			//pr = rt.exec("cmd /c git clone " + r);			
//		} catch (IOException e) {
//			e.printStackTrace();
//		}
	}


	static class SyncPipe implements Runnable
	{
	public SyncPipe(InputStream istrm, OutputStream ostrm) {
	      istrm_ = istrm;
	      ostrm_ = ostrm;
	  }
	  public void run() {
	      try
	      {
	          final byte[] buffer = new byte[1024];
	          for (int length = 0; (length = istrm_.read(buffer)) != -1; )
	          {
	              ostrm_.write(buffer, 0, length);
	          }
	      }
	      catch (Exception e)
	      {
	          e.printStackTrace();
	      }
	  }
	  private final OutputStream ostrm_;
	  private final InputStream istrm_;
	}
}
